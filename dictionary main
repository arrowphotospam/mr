using System;
using System.Collections.Generic;
using System.Linq;

namespace AnimalApp
{
    public class Animal
    {
        public int AnimalId { get; set; }
        public string Name { get; set; }
        public string Type { get; set; }
        public int Age { get; set; }
        public int Weight { get; set; }
        public decimal Price { get; set; }
    }

    public class AnimalManager
    {
        private Dictionary<int, Animal> animals = new Dictionary<int, Animal>();

        public void AddAnimal(Animal animal)
        {
            if (animals.ContainsKey(animal.AnimalId))
            {
                Console.WriteLine($"Animal ID {animal.AnimalId} already exists.");
                return;
            }
            animals.Add(animal.AnimalId, animal);
            Console.WriteLine("Animal added successfully.");
        }

        public void EditAnimal(int id, string name, string type, int age, int weight, decimal price)
        {
            if (!animals.ContainsKey(id))
            {
                Console.WriteLine("Animal not found.");
                return;
            }

            animals[id].Name = name;
            animals[id].Type = type;
            animals[id].Age = age;
            animals[id].Weight = weight;
            animals[id].Price = price;
            Console.WriteLine("Animal updated.");
        }

        public void DeleteAnimal(int id)
        {
            if (animals.Remove(id))
                Console.WriteLine("Animal deleted.");
            else
                Console.WriteLine("Animal not found.");
        }

        public void DeleteAnimalsWithZeroValues()
        {
            var keysToDelete = animals.Values
                .Where(a => a.Weight == 0 || a.Price == 0)
                .Select(a => a.AnimalId)
                .ToList();

            foreach (var key in keysToDelete)
                animals.Remove(key);

            Console.WriteLine($"{keysToDelete.Count} animal(s) deleted with weight or price = 0.");
        }

        public void DisplayAll()
        {
            if (animals.Count == 0)
            {
                Console.WriteLine("No animals available.");
                return;
            }

            foreach (var a in animals.Values)
                Console.WriteLine($"ID: {a.AnimalId}, Name: {a.Name}, Type: {a.Type}, Age: {a.Age}, Weight: {a.Weight}, Price: {a.Price:C}");
        }

        public void SearchByName(string name)
        {
            var matches = animals.Values
                .Where(a => a.Name.Equals(name, StringComparison.OrdinalIgnoreCase))
                .ToList();

            if (matches.Count == 0)
            {
                Console.WriteLine("No animal found.");
                return;
            }

            foreach (var a in matches)
                Console.WriteLine($"ID: {a.AnimalId}, Name: {a.Name}, Type: {a.Type}, Age: {a.Age}, Weight: {a.Weight}, Price: {a.Price:C}");
        }

        public void SortByName()
        {
            var sorted = animals.Values
                .OrderBy(a => a.Name)
                .ToList();

            foreach (var a in sorted)
                Console.WriteLine($"ID: {a.AnimalId}, Name: {a.Name}, Type: {a.Type}, Age: {a.Age}, Weight: {a.Weight}, Price: {a.Price:C}");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            AnimalManager manager = new AnimalManager();
            bool exit = false;

            while (!exit)
            {
                Console.WriteLine("\nMenu:");
                Console.WriteLine("1. Add Animal");
                Console.WriteLine("2. Edit Animal");
                Console.WriteLine("3. Delete Animal");
                Console.WriteLine("4. Search Animal by Name");
                Console.WriteLine("5. Display All Animals");
                Console.WriteLine("6. Sort Animals by Name");
                Console.WriteLine("7. Exit");
                Console.WriteLine("8. Delete Animals with 0 Weight or Price");
                Console.Write("Enter your choice: ");
                string choice = Console.ReadLine();

                try
                {
                    switch (choice)
                    {
                        case "1":
                            Console.Write("Enter ID: ");
                            int id = int.Parse(Console.ReadLine());

                            Console.Write("Enter Name: ");
                            string name = Console.ReadLine();

                            Console.Write("Enter Type: ");
                            string type = Console.ReadLine();

                            Console.Write("Enter Age: ");
                            int age = int.Parse(Console.ReadLine());

                            Console.Write("Enter Weight: ");
                            int weight = int.Parse(Console.ReadLine());

                            Console.Write("Enter Price: ");
                            decimal price = decimal.Parse(Console.ReadLine());

                            manager.AddAnimal(new Animal
                            {
                                AnimalId = id,
                                Name = name,
                                Type = type,
                                Age = age,
                                Weight = weight,
                                Price = price
                            });
                            break;

                        case "2":
                            Console.Write("Enter ID to edit: ");
                            int eid = int.Parse(Console.ReadLine());

                            Console.Write("Enter New Name: ");
                            string newName = Console.ReadLine();

                            Console.Write("Enter New Type: ");
                            string newType = Console.ReadLine();

                            Console.Write("Enter New Age: ");
                            int newAge = int.Parse(Console.ReadLine());

                            Console.Write("Enter New Weight: ");
                            int newWeight = int.Parse(Console.ReadLine());

                            Console.Write("Enter New Price: ");
                            decimal newPrice = decimal.Parse(Console.ReadLine());

                            manager.EditAnimal(eid, newName, newType, newAge, newWeight, newPrice);
                            break;

                        case "3":
                            Console.Write("Enter ID to delete: ");
                            int did = int.Parse(Console.ReadLine());
                            manager.DeleteAnimal(did);
                            break;

                        case "4":
                            Console.Write("Enter name to search: ");
                            string search = Console.ReadLine();
                            manager.SearchByName(search);
                            break;

                        case "5":
                            manager.DisplayAll();
                            break;

                        case "6":
                            manager.SortByName();
                            break;

                        case "7":
                            exit = true;
                            break;

                        case "8":
                            manager.DeleteAnimalsWithZeroValues();
                            break;

                        default:
                            Console.WriteLine("Invalid choice.");
                            break;
                    }
                }
                catch (FormatException)
                {
                    Console.WriteLine("Please enter valid number inputs.");
                }
                catch (ArgumentException)
                {
                    Console.WriteLine("Invalid argument passed.");
                }
            }
        }
    }
}